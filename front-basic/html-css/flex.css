
body {
    margin: 0;
}

/*! flex : 컨테이너 안의 아이템(요소) 들이 최적의 공간을 차지하도록 하면서 */
/*!        뷰포트와 아이템의 사이즈에 따라 유연하게 배치되는 레이아웃*/



.flex-container{
    width: 450px;
    height: 450px;   /* 컨테인의 부모요소는 반드시 높이가 있어야 한다 */
    background-color: rgba(0, 0, 0,0.4);

    display: flex;
    /*! flex direction : 주축의 방향을 지정 */
    flex-direction: row; 
    /* row : 주축의 방향이 왼쪾에서 오른쪽 */ 
    /* row-reverse : 오른쪽에서 왼쪽으로 */
    /* colum : 위에서 아래로 */
    /* colum-reverse : 아래에서 위로 */

    /* justify-content: center; */
    /*! row-reverse 랑은 다름 -> 이거는 왼쪽부터 쌓이는거 justify-content 이거는 정령임 */
    /*! justify-content : 주축에서 아이템이 어떻게 배치될지 결정 */
    /* flex-start : 주축의 시작지점부터 배치 */
    /* flex-end : 주축의 종료 지점부터 배치 */
    /* center : 주축의 가운데 배치 (중앙배열) */
    /* space-between : 시작 요소와 마지막 요소를 사이드에 배치하고 나머지 요소가 동일한 여백으로 배치
                       (아이템이 양쪽 끝으로 붙고 안에 내용들이 동일한 간격으로 정렬) */
    /* space-around :  요소에서 줄을 나눠 간격을 같게 정렬 */
    /* space-evenly : 끝 쪽부터 동일한 간격으로 정렬 */

    /* align-items: center; */
    /*! align-items : '교차 축'에서 아이템이 어떻게 배치될지 결정 */
    /* flex-start : 교차축의 시작 지점부터 배치 */
    /* flex-end : 교차축의 종료 시점부터 배치 */
    /* center : 교차 축의 가운데에 배치 */

}

.flex-item-1{

    flex-grow: 1;   
    /*! flex-grow : flex-item의 성장 비율을 지정 (남은 공간 중에서 지정)*/
    flex-shrink: 1;
    /*! flex-shrink : flex-item의 축소 비율을 지정 */
    flex: 1;
     /*! flex-grow + flex-shrink의 단축*/

    width: 250px;
    height: 250px;

    background-color: rgba(255, 0, 0, 0.5);
    color: aliceblue;
}

.flex-item-2{

    flex-grow: 2;
    flex-shrink: 2;
    flex: 2;

    width: 250px;
    height: 250px;

    background-color: rgba(0, 255, 0, 0.5);
    color: aliceblue;
}

.flex-item-3{

    flex-grow: 3;
    flex-shrink: 3;
    flex: 3;

    width: 250px;
    height: 250px;

    background-color: rgba(0, 0, 255, 0.5);
    color: aliceblue;
}