/* ! 선택자 */
/* ! 특정요소에 스타일을 적용하기 위한 패턴 */

/* ! 요소 선택자 : HTML 요소의 이름을 선택자로 사용 */
h1{
    color : rgb(255, 0, 0);
}

/*! id선택자 : id 속성의 이름을 선택자로 사용 (#id명) */
#blue-color {
    color : rgb(0, 0, 255);
}

/* ! class 선택자 : class 속성의 이름을 선택자로 사용 (.class명)*/
.green-color {
    color: rgb(0, 255, 0);
}

/*! 고급선택자 */

/*! 자손 선택자 : 두 요소를 공백으로 구분하여 지정, */
/*!              첫 번째 요소의 자손인 두 번쨰 요소에 스타일 적용*/
div p{
    color: rgb(255, 255, 0);
}

/*! 자식선택자 : 두 요소를 >으로 구분하여 지정, */
/*!             첫 번째 요소의 자식인 두번쨰 요소에 스타일 적용 */
div > p {
    color: rgb(255, 0, 255);
}

/*! 형제 선택자 : 두 요소를 +로 구분하여 지정, */
/*!              첫 번쨰 요소의 바로 다음 두번 째 요소의 스타일을 적용 */

h1 ~ h2 {
    color: rgb(0, 255, 255);
}

/*! 속성 선택자 : 특정한 속성을 가지는 요소에 스타일 적용 */
a[href="https://naver.com"] {
    background-color: green;
}

a[href="https://kakaocorp.com"]{
    background-color: yellow;
}

/*! 가상클래스 선택자 : 요소의 특정 상태에 따라 스타일을 적용 */
.button:hover {
    background-color: rgba(0, 0, 0, 0.05);
    cursor: pointer;
}

/*! 가상요소 선택자 : 요소의 특정 부분에 스타일을 적용 */
.button::first-letter{
    color: red;
}

/*! CSS font 속성 */
/*! font family : 글꼴을 지정하는 속성 */

@font-face {
    font-family: 'MaplestoryOTFBold';
    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@2.1/MaplestoryOTFBold.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

.font-family{
    font-family: 'MaplestoryOTFBold';
}

/*! font size : 글꼴의 크기를 변경 */
.font-size {
    font-size: 32px;
    /*! 상대단위 */
    /*! % 단위 : 부모 요소의 사이즈 대비 */
    /*! em 단위 : 부모 요소의 글꼴 사이즈 대비 */
    /*! rem 단위 : 루트(바디) 요소의 글꼴 사이즈 대비 */
    /*! vw 단위 : 뷰 포트의 너비 대비 (뷰 포트 -> 화면 전체대비) */
    /*! vh 단위 : 뷰 포트의 높이 대비 */
}

.sub-font-size {
    /* font-size: 100%; */
    /* font-size: 1em; */
    /* font-size: 1rem; */
    /* font-size: 1vw; */
    font-size: 20vw;
}

/*! font-weight : 글꼴의 굵기 변경 */
.font-weight {
    font-weight: 900;
}

/*! font-style : 글꼴의 형태 변경 */
.font-style{
    font-style: italic;
}


/*! text-decoration : 텍스트에 줄을 그을지 지정 */
.text-decoration {
    text-decoration: line-through;
}

/*! background-color : 배경의 색상을 지정 */
/* 인라인은 내용물만 따라하고(조절이 불가능) 블락은 사이즈 전체로 잡혀있는거라서 (조절이 가능) */
.background-red {
    width: 100px;
    height: 100px;
    background-color: red;
}

/*! background-image : 배경의 이미지 지정 */
.background-image {
    height: 800px;
    background-image: url('https://img.khan.co.kr/news/2023/01/02/news-p.v1.20230102.1f95577a65fc42a79ae7f990b39e7c21_P1.png');
    /*! background-repeat : 배경의 반복 지정 */ 
    background-repeat: no-repeat;
    /*! background-position : 배경의 이미지 위치를 지정*/ 
    background-position: 50% 50%;
    /*! background-size : 배경의 크기를 지정 */
    background-size: 100%
}

/*! 박스모델 : 페이지의 각 요소를 하나의 박스로 보고 그 레이아웃을 고정하는 모델 */
/*! margin : 테두리 외부여백을 지정 */
/*! boarder : 테두리를 지정 */
/*! padding : 테두리 내부 여백 지정 */
/*! width, height : 내용의 사이즈를 지정 */
.box-1 {
    background-color: pink;

    /*! 상우하좌 전체를 지정 */
    /* margin: 25px; */

    /*! 상하 좌우 지정 */
    /* margin: 25px 50px; */

    /*! 상 좌우 하 지정*/
    /* margin: 25px 50px 100px; */

    /*! 상 우 하 좌 지정*/
    /* margin: 25px 50px 100px 200px; */

    /*! 개별적 지정*/
    margin-left: 10px;
    margin-right: 20px;
    margin-top: 30px;
    margin-bottom: 40px;

    /*! 테두리너비 테두리타입 테두리색상 */
    /* border: 1px solid black; */
    border-left: 10px solid red;
    border-right: 20px solid blue;

    /*! 상우하좌 전체를 지정 */ 
    padding: 25px;
    /*! margin 이랑 똑같이 개별적  지정 가능*/
    /*! 상 우 하 좌 지정*/
    padding: 10px 20px 100px 30px;
}  

.box-2 {
    margin: 100px 50px;
    border: 1px solid black;
    /*! border-radius : 꼭지점의 둥글기 */
    border-radius: 50%;
    padding: 100px 200px;

    width: 200px;
    height:  150px;
}

.box {
    width: 100px;
    height: 100px;
    background-color: aquamarine;
}

/*! position : 요소의 위치를 지정함 */
/*! relative : 요소의 원래 위치 기준으로 위치를 변경 */

.relative {
    position: relative; /*원래 현재위치 기준으로 */
    left: 10vw;
    top: 10vw;
}

/*! absolute : 부모요소 혹은 위치가 지정된 조상요소 기준으로 위치 변경 */
.absolute {
    position: absolute;
    top: 10px;
    right: 10px;
}

/*! fixed : viewport 기준으로 위치를 변경 */
.fixed {
    position: fixed;
    right: 10vw;
    bottom: 10vw;
}

/*! display : 요소를 화면에 어떻게 표현할 지 결정 */

/*! block : 요소가 한줄 전체를 차지하게 함(width, height 조정이 가능) */
/*! inline : 요소가 내용 크기 만큼만 차지하게 함(width, height 조정이 불가능)*/
/*! lnline-block : 요소가 내용 크기만큼만 차지 하게함  (width, height 조정이 가능)*/
/*! none : 요소를 표시하지 않음 */
/*! flex : 요소의 내용을 유연하게 표시함 (width, height 조정이 가능 / 한줄 전체를 차지함)*/

.display {
    display: inline-flex;
    width: 200px;
    height: 200px;
    background-color: brown;
    color: black;
}